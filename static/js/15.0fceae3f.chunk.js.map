{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/soy/soy.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","textMode","getMode","modes","html","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","last","array","tokenUntil","untilRegExp","oldString","string","substr","pos","index","result","hideFirstChars","localState","localStates","mode","prepend","list","element","popcontext","scope","variables","previousContext","kind","expression","loose","lookupVariables","quoteKind","contains","scopes","copyState","concat","map","pop","skipToEnd","paramRe","peekChar","peek","indexOf","endTag","substring","selfClosed","prevTag","indentingTag","tagError","line","top","innerMode","lineComment","blockCommentContinue","useInnerComments","fold","registerHelper","defaultTags","script","attrRegexpCache","getAttrValue","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","dest","source","i","unshift","parserConfig","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","localMode","pat","cur","search","backUp","maybeBackup","local"],"mappings":"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","file":"static/js/15.0fceae3f.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"var-def\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"var-def\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(/\\]/)) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              return null;\n            }\n            if (stream.match(/for\\b/)) {\n              state.soyState.push(\"var-def\")\n              return \"keyword\";\n            } else if (stream.match(/in\\b/)) {\n              state.lookupVariables = true;\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}