{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","depth","inTag","baseState","tagName","tagStart","test","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","getMode","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","RegExp","join","styleMap","closing","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","line","finishContinue","rubyInQuote","endQuote","peek","rubyState","startRubySplat","runSplat","backUp","pat","offset","cur","idx","search","pos","restore","backup","maybeBackup","htmlState","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","skipToEnd","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","readQuoted","sub","subStream","StringStream","string","slice","tabSize","start","lastColumnPos","lastColumnValue","subMode","subState","firstSub","mode","query","spec","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","m","startSubMode","slimTag","slim","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","embed","unescaped","nextTokenize","fresh","escaped","last","copyState","blankLine","innerMode","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","regexp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","tags","configTags","configScript","scriptTypes","matches","toLowerCase","modeSpec","tagInfo","tagText","findMatchingMode","endTagA","endTag","localState","localMode","local","wordObj","words","o","e","curPunc","keywords","indentWords","dedentWords","opening","newtok","tokenBase","readBlockComment","phrase","mayIndent","found","indexOf","regexpAhead","delim","propertyIsEnumerable","pop","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold"],"mappings":"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","file":"static/js/12.50fce099.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n"],"sourceRoot":""}